---
import Menu from './Menu.astro'
import '@styles/editor.sass'
---

<header class="editor-header">
	<button class="export"> save as file </button>
	<Menu />
</header>
<main></main>
<script>
	import { Editor, rootCtx } from '@milkdown/kit/core'
	import { clipboard } from '@milkdown/kit/plugin/clipboard'
	import { history } from '@milkdown/kit/plugin/history'
	import { indent } from '@milkdown/kit/plugin/indent'
	import { upload } from '@milkdown/kit/plugin/upload'
	import { commonmark } from '@milkdown/kit/preset/commonmark'
	import { getMarkdown } from '@milkdown/utils'
	import { exportFile } from '@utils/exportFile'
	import { load } from '@utils/load'
	import { save } from '@utils/save'

	const autosaveInterval = 5_000

	const editor = await Editor.make()
		.use(commonmark)
		.use(history)
		.use(clipboard)
		.use(upload)
		.use(indent)
		.config((ctx) => {
			ctx.set(rootCtx, 'main')
		})
		.create()

	load(editor)

	let saver = setInterval(() => {
		save(editor.action(getMarkdown()))
		console.debug('Saved doc by timer')
	}, autosaveInterval)

	const editorElem = document.querySelector<HTMLDivElement>('.editor')
	const exportButton = document.querySelector<HTMLButtonElement>('.export')
	editorElem.focus()

	editorElem.addEventListener('visibilitychange', toggleAutosave)

	editorElem.addEventListener('keydown', (e) => {
		if ((e.ctrlKey || e.metaKey) && e.key === 's') {
			e.preventDefault()
			if (e.repeat) return
			console.debug(`Key pressed: ${e.key}`)
			if (e.shiftKey) {
				exportFile(editor.action(getMarkdown()))
				console.debug(`Exported note by shortcut`)
			} else {
				save(editor.action(getMarkdown()))
				console.log(`Saved note by shortcut`)
			}
		}
	})

	exportButton.addEventListener('click', () => {
		exportFile(editor.action(getMarkdown()))
	})

	function toggleAutosave() {
		if (document.hidden) {
			clearInterval(saver)
		} else {
			saver = setInterval(() => {
				save(editor.action(getMarkdown()))
			}, autosaveInterval)
		}
	}
</script>
