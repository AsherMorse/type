---
import Modal from './Modal.astro'

const markdownDict = [
    { markdown: '# Heading 1', html: `<h1>Heading 1</h1>` },
    { markdown: '## Heading 2', html: `<h2>Heading 2</h2>` },
    { markdown: '### Heading 3', html: `<h3>Heading 3</h3>` },
    { markdown: '**Bold text**', html: `<b>Bold text</b>` },
    { markdown: '*Italic text**', html: `<i>Italic text</i>` },
    { markdown: '`Code`', html: `<code>Code</code>` },
    {
        markdown: '```<br/>Code Block<br/>```',
        html: `<pre><code>Code Block</code></pre>`,
    },
    {
        markdown: '[Link](https://type.baby/)',
        html: `<a tabindex="-1" href="https://type.baby" target="_blank">Link</a>`,
    },
    {
        markdown: '&lt;https://type.baby/&gt;',
        html: `<a tabindex="-1" href="https://type.baby" target="_blank">https://type.baby</a>`,
    },
    {
        markdown: '- Item 1<br/>- Item 2<br/>  - Nested item',
        html: `<ul><li>Item 1</li><li>Item 2<ul><li>Nested item</li></ul></li></ul>`,
    },
    {
        markdown: '1. Item 1<br/>2. Item 2<br/>  1. Nested item',
        html: `<ol><li>Item 1</li><li>Item 2<ol><li>Nested item</li></ol></li></ol>`,
    },
    {
        markdown: '> Quote',
        html: `<blockquote>Quote</blockquote/>`,
    },
    {
        markdown: '---',
        html: `<hr/>`,
    },
    {
        markdown: 'Ignore symbol \\*',
        html: `Ignore symbol *`,
    },
]
---

<Modal name="instructions" title="How to markdown"
    ><dl class="instructions blocks">
        {
            markdownDict.map((x) => (
                <>
                    <dt>
                        <code set:html={x.markdown} />
                    </dt>
                    <dd set:html={x.html} />
                </>
            ))
        }
    </dl>
</Modal>
<style lang="scss">
    @use '@styles/blocks.sass';

    .instructions {
        display: flex;
        flex-direction: column;
        width: 100%;
        gap: var(--space-m);
        padding-right: var(--space-xl);
        padding-bottom: var(--space-l);

        > dt > code {
            font-size: var(--font-size-xs);
            padding: var(--space-l);
            display: inline-block;
        }
    }

    dt:not(:first-child) {
        margin-top: var(--space-xl);
    }

    // Hack to align usually hanging elements
    dd:has(ol, blockquote) {
        padding-left: calc(var(--space-l) + var(--space-m));
    }
    dd:has(ul) {
        padding-left: var(--space-l);
    }
</style>
